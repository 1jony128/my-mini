# Продвинутая конфигурация Nginx с пререндерингом и кэшированием

# Кэш для пререндеренных страниц
proxy_cache_path /var/cache/nginx/prerender levels=1:2 keys_zone=prerender:10m max_size=1g inactive=60m;

map $http_user_agent $is_bot {
    default 0;
    ~*(?i)(googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator|whatsapp) 1;
}

server {
    listen 80;
    server_name _;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Логирование для отладки
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Безопасность
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Кэширование статических файлов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
    }
    
    # SEO файлы
    location = /sitemap.xml {
        try_files $uri =404;
        add_header Content-Type "application/xml; charset=utf-8";
        add_header Cache-Control "public, max-age=3600";
        add_header X-Served-By "nginx-static";
    }
    
    location = /robots.txt {
        try_files $uri =404;
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Cache-Control "public, max-age=3600";
        add_header X-Served-By "nginx-static";
    }
    
    # Основная логика обслуживания
    location / {
        # Добавляем заголовок для отладки
        add_header X-User-Agent-Type $is_bot;
        
        # Для ботов - пререндеренные страницы
        if ($is_bot = 1) {
            add_header X-Served-By "prerendered";
            try_files $uri $uri/index.html $uri.html /index.html;
            break;
        }
        
        # Для обычных пользователей - SPA
        add_header X-Served-By "spa";
        try_files $uri $uri/ /index.html;
        
        # Заголовки для HTML
        location ~* \.html$ {
            add_header Cache-Control "public, max-age=0, must-revalidate";
            add_header Vary "User-Agent";
        }
    }
    
    # Специальная страница для отладки пререндера
    location /debug/prerender {
        add_header Content-Type "application/json";
        return 200 '{"is_bot": $is_bot, "user_agent": "$http_user_agent", "served_by": "debug"}';
    }
    
    # Обработка ошибок
    error_page 404 /index.html;
}
